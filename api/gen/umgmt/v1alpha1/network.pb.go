// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: umgmt/v1alpha1/network.proto

package umgmtv1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddressType int32

const (
	AddressType_ADDRESS_TYPE_UNSPECIFIED AddressType = 0
	AddressType_ADDRESS_TYPE_IPV4        AddressType = 1
	AddressType_ADDRESS_TYPE_IPV6        AddressType = 2
)

// Enum value maps for AddressType.
var (
	AddressType_name = map[int32]string{
		0: "ADDRESS_TYPE_UNSPECIFIED",
		1: "ADDRESS_TYPE_IPV4",
		2: "ADDRESS_TYPE_IPV6",
	}
	AddressType_value = map[string]int32{
		"ADDRESS_TYPE_UNSPECIFIED": 0,
		"ADDRESS_TYPE_IPV4":        1,
		"ADDRESS_TYPE_IPV6":        2,
	}
)

func (x AddressType) Enum() *AddressType {
	p := new(AddressType)
	*p = x
	return p
}

func (x AddressType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AddressType) Descriptor() protoreflect.EnumDescriptor {
	return file_umgmt_v1alpha1_network_proto_enumTypes[0].Descriptor()
}

func (AddressType) Type() protoreflect.EnumType {
	return &file_umgmt_v1alpha1_network_proto_enumTypes[0]
}

func (x AddressType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AddressType.Descriptor instead.
func (AddressType) EnumDescriptor() ([]byte, []int) {
	return file_umgmt_v1alpha1_network_proto_rawDescGZIP(), []int{0}
}

type AddressOrigin int32

const (
	AddressOrigin_ADDRESS_ORIGIN_UNSPECIFIED AddressOrigin = 0
	AddressOrigin_ADDRESS_ORIGIN_STATIC      AddressOrigin = 1
	AddressOrigin_ADDRESS_ORIGIN_DHCP        AddressOrigin = 2
)

// Enum value maps for AddressOrigin.
var (
	AddressOrigin_name = map[int32]string{
		0: "ADDRESS_ORIGIN_UNSPECIFIED",
		1: "ADDRESS_ORIGIN_STATIC",
		2: "ADDRESS_ORIGIN_DHCP",
	}
	AddressOrigin_value = map[string]int32{
		"ADDRESS_ORIGIN_UNSPECIFIED": 0,
		"ADDRESS_ORIGIN_STATIC":      1,
		"ADDRESS_ORIGIN_DHCP":        2,
	}
)

func (x AddressOrigin) Enum() *AddressOrigin {
	p := new(AddressOrigin)
	*p = x
	return p
}

func (x AddressOrigin) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AddressOrigin) Descriptor() protoreflect.EnumDescriptor {
	return file_umgmt_v1alpha1_network_proto_enumTypes[1].Descriptor()
}

func (AddressOrigin) Type() protoreflect.EnumType {
	return &file_umgmt_v1alpha1_network_proto_enumTypes[1]
}

func (x AddressOrigin) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AddressOrigin.Descriptor instead.
func (AddressOrigin) EnumDescriptor() ([]byte, []int) {
	return file_umgmt_v1alpha1_network_proto_rawDescGZIP(), []int{1}
}

type InterfaceType int32

const (
	InterfaceType_INTERFACE_TYPE_UNSPECIFIED InterfaceType = 0
	InterfaceType_INTERFACE_TYPE_ETHERNET    InterfaceType = 1
	InterfaceType_INTERFACE_TYPE_WIFI        InterfaceType = 2
	InterfaceType_INTERFACE_TYPE_CELLULAR    InterfaceType = 3
)

// Enum value maps for InterfaceType.
var (
	InterfaceType_name = map[int32]string{
		0: "INTERFACE_TYPE_UNSPECIFIED",
		1: "INTERFACE_TYPE_ETHERNET",
		2: "INTERFACE_TYPE_WIFI",
		3: "INTERFACE_TYPE_CELLULAR",
	}
	InterfaceType_value = map[string]int32{
		"INTERFACE_TYPE_UNSPECIFIED": 0,
		"INTERFACE_TYPE_ETHERNET":    1,
		"INTERFACE_TYPE_WIFI":        2,
		"INTERFACE_TYPE_CELLULAR":    3,
	}
)

func (x InterfaceType) Enum() *InterfaceType {
	p := new(InterfaceType)
	*p = x
	return p
}

func (x InterfaceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InterfaceType) Descriptor() protoreflect.EnumDescriptor {
	return file_umgmt_v1alpha1_network_proto_enumTypes[2].Descriptor()
}

func (InterfaceType) Type() protoreflect.EnumType {
	return &file_umgmt_v1alpha1_network_proto_enumTypes[2]
}

func (x InterfaceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InterfaceType.Descriptor instead.
func (InterfaceType) EnumDescriptor() ([]byte, []int) {
	return file_umgmt_v1alpha1_network_proto_rawDescGZIP(), []int{2}
}

type Duplexing int32

const (
	Duplexing_DUPLEXING_UNSPECIFIED  Duplexing = 0
	Duplexing_DUPLEXING_SIMPLEX      Duplexing = 1
	Duplexing_DUPLEXING_DUAL_SIMPLEX Duplexing = 2
	Duplexing_DUPLEXING_HALF_DUPLEX  Duplexing = 3
	Duplexing_DUPLEXING_FULL_DUPLEX  Duplexing = 4
)

// Enum value maps for Duplexing.
var (
	Duplexing_name = map[int32]string{
		0: "DUPLEXING_UNSPECIFIED",
		1: "DUPLEXING_SIMPLEX",
		2: "DUPLEXING_DUAL_SIMPLEX",
		3: "DUPLEXING_HALF_DUPLEX",
		4: "DUPLEXING_FULL_DUPLEX",
	}
	Duplexing_value = map[string]int32{
		"DUPLEXING_UNSPECIFIED":  0,
		"DUPLEXING_SIMPLEX":      1,
		"DUPLEXING_DUAL_SIMPLEX": 2,
		"DUPLEXING_HALF_DUPLEX":  3,
		"DUPLEXING_FULL_DUPLEX":  4,
	}
)

func (x Duplexing) Enum() *Duplexing {
	p := new(Duplexing)
	*p = x
	return p
}

func (x Duplexing) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Duplexing) Descriptor() protoreflect.EnumDescriptor {
	return file_umgmt_v1alpha1_network_proto_enumTypes[3].Descriptor()
}

func (Duplexing) Type() protoreflect.EnumType {
	return &file_umgmt_v1alpha1_network_proto_enumTypes[3]
}

func (x Duplexing) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Duplexing.Descriptor instead.
func (Duplexing) EnumDescriptor() ([]byte, []int) {
	return file_umgmt_v1alpha1_network_proto_rawDescGZIP(), []int{3}
}

type DnsType int32

const (
	DnsType_DNS_TYPE_UNSPECIFIED DnsType = 0
	DnsType_DNS_TYPE_CLASSIC     DnsType = 1
	DnsType_DNS_TYPE_DOT         DnsType = 2
	DnsType_DNS_TYPE_DOH         DnsType = 3
	DnsType_DNS_TYPE_DOQ         DnsType = 4
)

// Enum value maps for DnsType.
var (
	DnsType_name = map[int32]string{
		0: "DNS_TYPE_UNSPECIFIED",
		1: "DNS_TYPE_CLASSIC",
		2: "DNS_TYPE_DOT",
		3: "DNS_TYPE_DOH",
		4: "DNS_TYPE_DOQ",
	}
	DnsType_value = map[string]int32{
		"DNS_TYPE_UNSPECIFIED": 0,
		"DNS_TYPE_CLASSIC":     1,
		"DNS_TYPE_DOT":         2,
		"DNS_TYPE_DOH":         3,
		"DNS_TYPE_DOQ":         4,
	}
)

func (x DnsType) Enum() *DnsType {
	p := new(DnsType)
	*p = x
	return p
}

func (x DnsType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DnsType) Descriptor() protoreflect.EnumDescriptor {
	return file_umgmt_v1alpha1_network_proto_enumTypes[4].Descriptor()
}

func (DnsType) Type() protoreflect.EnumType {
	return &file_umgmt_v1alpha1_network_proto_enumTypes[4]
}

func (x DnsType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DnsType.Descriptor instead.
func (DnsType) EnumDescriptor() ([]byte, []int) {
	return file_umgmt_v1alpha1_network_proto_rawDescGZIP(), []int{4}
}

type TimeType int32

const (
	TimeType_TIME_TYPE_UNSPECIFIED TimeType = 0
	TimeType_TIME_TYPE_NTP         TimeType = 1
	TimeType_TIME_TYPE_NTS         TimeType = 2
	TimeType_TIME_TYPE_PTP         TimeType = 3
	TimeType_TIME_TYPE_ROUGHTIME   TimeType = 4
)

// Enum value maps for TimeType.
var (
	TimeType_name = map[int32]string{
		0: "TIME_TYPE_UNSPECIFIED",
		1: "TIME_TYPE_NTP",
		2: "TIME_TYPE_NTS",
		3: "TIME_TYPE_PTP",
		4: "TIME_TYPE_ROUGHTIME",
	}
	TimeType_value = map[string]int32{
		"TIME_TYPE_UNSPECIFIED": 0,
		"TIME_TYPE_NTP":         1,
		"TIME_TYPE_NTS":         2,
		"TIME_TYPE_PTP":         3,
		"TIME_TYPE_ROUGHTIME":   4,
	}
)

func (x TimeType) Enum() *TimeType {
	p := new(TimeType)
	*p = x
	return p
}

func (x TimeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimeType) Descriptor() protoreflect.EnumDescriptor {
	return file_umgmt_v1alpha1_network_proto_enumTypes[5].Descriptor()
}

func (TimeType) Type() protoreflect.EnumType {
	return &file_umgmt_v1alpha1_network_proto_enumTypes[5]
}

func (x TimeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimeType.Descriptor instead.
func (TimeType) EnumDescriptor() ([]byte, []int) {
	return file_umgmt_v1alpha1_network_proto_rawDescGZIP(), []int{5}
}

type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    AddressType   `protobuf:"varint,1,opt,name=type,proto3,enum=umgmt.v1alpha1.AddressType" json:"type,omitempty"`
	Address string        `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Netmask string        `protobuf:"bytes,3,opt,name=netmask,proto3" json:"netmask,omitempty"`
	Origin  AddressOrigin `protobuf:"varint,4,opt,name=origin,proto3,enum=umgmt.v1alpha1.AddressOrigin" json:"origin,omitempty"`
	Gateway string        `protobuf:"bytes,5,opt,name=gateway,proto3" json:"gateway,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_umgmt_v1alpha1_network_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_umgmt_v1alpha1_network_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_umgmt_v1alpha1_network_proto_rawDescGZIP(), []int{0}
}

func (x *Address) GetType() AddressType {
	if x != nil {
		return x.Type
	}
	return AddressType_ADDRESS_TYPE_UNSPECIFIED
}

func (x *Address) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Address) GetNetmask() string {
	if x != nil {
		return x.Netmask
	}
	return ""
}

func (x *Address) GetOrigin() AddressOrigin {
	if x != nil {
		return x.Origin
	}
	return AddressOrigin_ADDRESS_ORIGIN_UNSPECIFIED
}

func (x *Address) GetGateway() string {
	if x != nil {
		return x.Gateway
	}
	return ""
}

type Vlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Id      uint32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Vlan) Reset() {
	*x = Vlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_umgmt_v1alpha1_network_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vlan) ProtoMessage() {}

func (x *Vlan) ProtoReflect() protoreflect.Message {
	mi := &file_umgmt_v1alpha1_network_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vlan.ProtoReflect.Descriptor instead.
func (*Vlan) Descriptor() ([]byte, []int) {
	return file_umgmt_v1alpha1_network_proto_rawDescGZIP(), []int{1}
}

func (x *Vlan) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Vlan) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Interface struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type       InterfaceType `protobuf:"varint,2,opt,name=type,proto3,enum=umgmt.v1alpha1.InterfaceType" json:"type,omitempty"`
	MacAddress string        `protobuf:"bytes,3,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	Addresses  []*Address    `protobuf:"bytes,4,rep,name=addresses,proto3" json:"addresses,omitempty"`
	Vlan       *Vlan         `protobuf:"bytes,5,opt,name=vlan,proto3" json:"vlan,omitempty"`
	Mtu        uint32        `protobuf:"varint,6,opt,name=mtu,proto3" json:"mtu,omitempty"`
	SpeedMbps  uint32        `protobuf:"varint,7,opt,name=speed_mbps,json=speedMbps,proto3" json:"speed_mbps,omitempty"`
	Duplexing  Duplexing     `protobuf:"varint,8,opt,name=duplexing,proto3,enum=umgmt.v1alpha1.Duplexing" json:"duplexing,omitempty"`
	Active     bool          `protobuf:"varint,9,opt,name=active,proto3" json:"active,omitempty"`
}

func (x *Interface) Reset() {
	*x = Interface{}
	if protoimpl.UnsafeEnabled {
		mi := &file_umgmt_v1alpha1_network_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interface) ProtoMessage() {}

func (x *Interface) ProtoReflect() protoreflect.Message {
	mi := &file_umgmt_v1alpha1_network_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interface.ProtoReflect.Descriptor instead.
func (*Interface) Descriptor() ([]byte, []int) {
	return file_umgmt_v1alpha1_network_proto_rawDescGZIP(), []int{2}
}

func (x *Interface) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Interface) GetType() InterfaceType {
	if x != nil {
		return x.Type
	}
	return InterfaceType_INTERFACE_TYPE_UNSPECIFIED
}

func (x *Interface) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *Interface) GetAddresses() []*Address {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *Interface) GetVlan() *Vlan {
	if x != nil {
		return x.Vlan
	}
	return nil
}

func (x *Interface) GetMtu() uint32 {
	if x != nil {
		return x.Mtu
	}
	return 0
}

func (x *Interface) GetSpeedMbps() uint32 {
	if x != nil {
		return x.SpeedMbps
	}
	return 0
}

func (x *Interface) GetDuplexing() Duplexing {
	if x != nil {
		return x.Duplexing
	}
	return Duplexing_DUPLEXING_UNSPECIFIED
}

func (x *Interface) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

type DnsServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fqdn    string     `protobuf:"bytes,1,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	Address []*Address `protobuf:"bytes,2,rep,name=address,proto3" json:"address,omitempty"`
	Type    DnsType    `protobuf:"varint,3,opt,name=type,proto3,enum=umgmt.v1alpha1.DnsType" json:"type,omitempty"`
	Dnssec  bool       `protobuf:"varint,4,opt,name=dnssec,proto3" json:"dnssec,omitempty"`
}

func (x *DnsServer) Reset() {
	*x = DnsServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_umgmt_v1alpha1_network_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DnsServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DnsServer) ProtoMessage() {}

func (x *DnsServer) ProtoReflect() protoreflect.Message {
	mi := &file_umgmt_v1alpha1_network_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DnsServer.ProtoReflect.Descriptor instead.
func (*DnsServer) Descriptor() ([]byte, []int) {
	return file_umgmt_v1alpha1_network_proto_rawDescGZIP(), []int{3}
}

func (x *DnsServer) GetFqdn() string {
	if x != nil {
		return x.Fqdn
	}
	return ""
}

func (x *DnsServer) GetAddress() []*Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *DnsServer) GetType() DnsType {
	if x != nil {
		return x.Type
	}
	return DnsType_DNS_TYPE_UNSPECIFIED
}

func (x *DnsServer) GetDnssec() bool {
	if x != nil {
		return x.Dnssec
	}
	return false
}

type TimeServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fqdn    string     `protobuf:"bytes,1,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	Address []*Address `protobuf:"bytes,2,rep,name=address,proto3" json:"address,omitempty"`
	Type    TimeType   `protobuf:"varint,3,opt,name=type,proto3,enum=umgmt.v1alpha1.TimeType" json:"type,omitempty"`
}

func (x *TimeServer) Reset() {
	*x = TimeServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_umgmt_v1alpha1_network_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeServer) ProtoMessage() {}

func (x *TimeServer) ProtoReflect() protoreflect.Message {
	mi := &file_umgmt_v1alpha1_network_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeServer.ProtoReflect.Descriptor instead.
func (*TimeServer) Descriptor() ([]byte, []int) {
	return file_umgmt_v1alpha1_network_proto_rawDescGZIP(), []int{4}
}

func (x *TimeServer) GetFqdn() string {
	if x != nil {
		return x.Fqdn
	}
	return ""
}

func (x *TimeServer) GetAddress() []*Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *TimeServer) GetType() TimeType {
	if x != nil {
		return x.Type
	}
	return TimeType_TIME_TYPE_UNSPECIFIED
}

type Network struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostname    string        `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Interfaces  []*Interface  `protobuf:"bytes,2,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
	DnsServers  []*DnsServer  `protobuf:"bytes,3,rep,name=dns_servers,json=dnsServers,proto3" json:"dns_servers,omitempty"`
	TimeServers []*TimeServer `protobuf:"bytes,4,rep,name=time_servers,json=timeServers,proto3" json:"time_servers,omitempty"`
}

func (x *Network) Reset() {
	*x = Network{}
	if protoimpl.UnsafeEnabled {
		mi := &file_umgmt_v1alpha1_network_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Network) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network) ProtoMessage() {}

func (x *Network) ProtoReflect() protoreflect.Message {
	mi := &file_umgmt_v1alpha1_network_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Network.ProtoReflect.Descriptor instead.
func (*Network) Descriptor() ([]byte, []int) {
	return file_umgmt_v1alpha1_network_proto_rawDescGZIP(), []int{5}
}

func (x *Network) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Network) GetInterfaces() []*Interface {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

func (x *Network) GetDnsServers() []*DnsServer {
	if x != nil {
		return x.DnsServers
	}
	return nil
}

func (x *Network) GetTimeServers() []*TimeServer {
	if x != nil {
		return x.TimeServers
	}
	return nil
}

type GetNetworkInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldMask *fieldmaskpb.FieldMask `protobuf:"bytes,1,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
}

func (x *GetNetworkInfoRequest) Reset() {
	*x = GetNetworkInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_umgmt_v1alpha1_network_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNetworkInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNetworkInfoRequest) ProtoMessage() {}

func (x *GetNetworkInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_umgmt_v1alpha1_network_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNetworkInfoRequest.ProtoReflect.Descriptor instead.
func (*GetNetworkInfoRequest) Descriptor() ([]byte, []int) {
	return file_umgmt_v1alpha1_network_proto_rawDescGZIP(), []int{6}
}

func (x *GetNetworkInfoRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

type GetNetworkInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network []*Network `protobuf:"bytes,1,rep,name=network,proto3" json:"network,omitempty"`
}

func (x *GetNetworkInfoResponse) Reset() {
	*x = GetNetworkInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_umgmt_v1alpha1_network_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNetworkInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNetworkInfoResponse) ProtoMessage() {}

func (x *GetNetworkInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_umgmt_v1alpha1_network_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNetworkInfoResponse.ProtoReflect.Descriptor instead.
func (*GetNetworkInfoResponse) Descriptor() ([]byte, []int) {
	return file_umgmt_v1alpha1_network_proto_rawDescGZIP(), []int{7}
}

func (x *GetNetworkInfoResponse) GetNetwork() []*Network {
	if x != nil {
		return x.Network
	}
	return nil
}

var File_umgmt_v1alpha1_network_proto protoreflect.FileDescriptor

var file_umgmt_v1alpha1_network_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x75, 0x6d, 0x67, 0x6d, 0x74, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x75, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x20,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xbf, 0x01, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2f, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x75, 0x6d, 0x67,
	0x6d, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x6d, 0x61,
	0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x6d, 0x61, 0x73,
	0x6b, 0x12, 0x35, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1d, 0x2e, 0x75, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x22, 0x30, 0x0a, 0x04, 0x56, 0x6c, 0x61, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x22, 0xd6, 0x02, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x75, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x63,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x35, 0x0a, 0x09, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x75, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x12, 0x28, 0x0a, 0x04, 0x76, 0x6c, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x75, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x56, 0x6c, 0x61, 0x6e, 0x52, 0x04, 0x76, 0x6c, 0x61, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x74, 0x75, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6d, 0x74, 0x75, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x70, 0x65, 0x65, 0x64, 0x5f, 0x6d, 0x62, 0x70, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x73, 0x70, 0x65, 0x65, 0x64, 0x4d, 0x62, 0x70, 0x73, 0x12, 0x37, 0x0a, 0x09,
	0x64, 0x75, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x75, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x44, 0x75, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x64, 0x75, 0x70, 0x6c,
	0x65, 0x78, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x97, 0x01,
	0x0a, 0x09, 0x44, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x71, 0x64, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x12,
	0x31, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x75, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x75, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x44, 0x6e, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x6e, 0x73, 0x73, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x64, 0x6e, 0x73, 0x73, 0x65, 0x63, 0x22, 0x81, 0x01, 0x0a, 0x0a, 0x54, 0x69, 0x6d, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x12, 0x31, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x75, 0x6d,
	0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2c, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x75, 0x6d,
	0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xdb, 0x01, 0x0a, 0x07,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x75, 0x6d, 0x67, 0x6d, 0x74, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x12, 0x3a,
	0x0a, 0x0b, 0x64, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x75, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x0a,
	0x64, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x3d, 0x0a, 0x0c, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x75, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x0b, 0x74, 0x69,
	0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x22, 0x52, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61,
	0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x4b, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x75, 0x6d, 0x67, 0x6d, 0x74,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2a, 0x59, 0x0a, 0x0b, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x41, 0x44, 0x44,
	0x52, 0x45, 0x53, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x44, 0x44, 0x52, 0x45,
	0x53, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x50, 0x56, 0x34, 0x10, 0x01, 0x12, 0x15,
	0x0a, 0x11, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49,
	0x50, 0x56, 0x36, 0x10, 0x02, 0x2a, 0x63, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x1a, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53,
	0x53, 0x5f, 0x4f, 0x52, 0x49, 0x47, 0x49, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53,
	0x53, 0x5f, 0x4f, 0x52, 0x49, 0x47, 0x49, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x49, 0x43, 0x10,
	0x01, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x4f, 0x52, 0x49,
	0x47, 0x49, 0x4e, 0x5f, 0x44, 0x48, 0x43, 0x50, 0x10, 0x02, 0x2a, 0x82, 0x01, 0x0a, 0x0d, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x1a,
	0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17,
	0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45,
	0x54, 0x48, 0x45, 0x52, 0x4e, 0x45, 0x54, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x4e, 0x54,
	0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x57, 0x49, 0x46, 0x49,
	0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x45, 0x4c, 0x4c, 0x55, 0x4c, 0x41, 0x52, 0x10, 0x03, 0x2a,
	0x8f, 0x01, 0x0a, 0x09, 0x44, 0x75, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x6e, 0x67, 0x12, 0x19, 0x0a,
	0x15, 0x44, 0x55, 0x50, 0x4c, 0x45, 0x58, 0x49, 0x4e, 0x47, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x55, 0x50, 0x4c,
	0x45, 0x58, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x49, 0x4d, 0x50, 0x4c, 0x45, 0x58, 0x10, 0x01, 0x12,
	0x1a, 0x0a, 0x16, 0x44, 0x55, 0x50, 0x4c, 0x45, 0x58, 0x49, 0x4e, 0x47, 0x5f, 0x44, 0x55, 0x41,
	0x4c, 0x5f, 0x53, 0x49, 0x4d, 0x50, 0x4c, 0x45, 0x58, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x44,
	0x55, 0x50, 0x4c, 0x45, 0x58, 0x49, 0x4e, 0x47, 0x5f, 0x48, 0x41, 0x4c, 0x46, 0x5f, 0x44, 0x55,
	0x50, 0x4c, 0x45, 0x58, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x55, 0x50, 0x4c, 0x45, 0x58,
	0x49, 0x4e, 0x47, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x5f, 0x44, 0x55, 0x50, 0x4c, 0x45, 0x58, 0x10,
	0x04, 0x2a, 0x6f, 0x0a, 0x07, 0x44, 0x6e, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14,
	0x44, 0x4e, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x4e, 0x53, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x49, 0x43, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c,
	0x44, 0x4e, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x4f, 0x54, 0x10, 0x02, 0x12, 0x10,
	0x0a, 0x0c, 0x44, 0x4e, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x4f, 0x48, 0x10, 0x03,
	0x12, 0x10, 0x0a, 0x0c, 0x44, 0x4e, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x4f, 0x51,
	0x10, 0x04, 0x2a, 0x77, 0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19,
	0x0a, 0x15, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x49, 0x4d,
	0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x54, 0x50, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d,
	0x54, 0x49, 0x4d, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x54, 0x53, 0x10, 0x02, 0x12,
	0x11, 0x0a, 0x0d, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x54, 0x50,
	0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x52, 0x4f, 0x55, 0x47, 0x48, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x04, 0x42, 0xbb, 0x01, 0x0a, 0x12,
	0x63, 0x6f, 0x6d, 0x2e, 0x75, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x42, 0x0c, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x75,
	0x2d, 0x62, 0x6d, 0x63, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x75, 0x6d, 0x67, 0x6d, 0x74, 0x2f, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x3b, 0x75, 0x6d, 0x67, 0x6d, 0x74, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0xa2, 0x02, 0x03, 0x55, 0x58, 0x58, 0xaa, 0x02, 0x0e, 0x55, 0x6d, 0x67, 0x6d, 0x74,
	0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xca, 0x02, 0x0e, 0x55, 0x6d, 0x67, 0x6d,
	0x74, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xe2, 0x02, 0x1a, 0x55, 0x6d, 0x67,
	0x6d, 0x74, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x55, 0x6d, 0x67, 0x6d, 0x74, 0x3a,
	0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_umgmt_v1alpha1_network_proto_rawDescOnce sync.Once
	file_umgmt_v1alpha1_network_proto_rawDescData = file_umgmt_v1alpha1_network_proto_rawDesc
)

func file_umgmt_v1alpha1_network_proto_rawDescGZIP() []byte {
	file_umgmt_v1alpha1_network_proto_rawDescOnce.Do(func() {
		file_umgmt_v1alpha1_network_proto_rawDescData = protoimpl.X.CompressGZIP(file_umgmt_v1alpha1_network_proto_rawDescData)
	})
	return file_umgmt_v1alpha1_network_proto_rawDescData
}

var file_umgmt_v1alpha1_network_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_umgmt_v1alpha1_network_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_umgmt_v1alpha1_network_proto_goTypes = []interface{}{
	(AddressType)(0),               // 0: umgmt.v1alpha1.AddressType
	(AddressOrigin)(0),             // 1: umgmt.v1alpha1.AddressOrigin
	(InterfaceType)(0),             // 2: umgmt.v1alpha1.InterfaceType
	(Duplexing)(0),                 // 3: umgmt.v1alpha1.Duplexing
	(DnsType)(0),                   // 4: umgmt.v1alpha1.DnsType
	(TimeType)(0),                  // 5: umgmt.v1alpha1.TimeType
	(*Address)(nil),                // 6: umgmt.v1alpha1.Address
	(*Vlan)(nil),                   // 7: umgmt.v1alpha1.Vlan
	(*Interface)(nil),              // 8: umgmt.v1alpha1.Interface
	(*DnsServer)(nil),              // 9: umgmt.v1alpha1.DnsServer
	(*TimeServer)(nil),             // 10: umgmt.v1alpha1.TimeServer
	(*Network)(nil),                // 11: umgmt.v1alpha1.Network
	(*GetNetworkInfoRequest)(nil),  // 12: umgmt.v1alpha1.GetNetworkInfoRequest
	(*GetNetworkInfoResponse)(nil), // 13: umgmt.v1alpha1.GetNetworkInfoResponse
	(*fieldmaskpb.FieldMask)(nil),  // 14: google.protobuf.FieldMask
}
var file_umgmt_v1alpha1_network_proto_depIdxs = []int32{
	0,  // 0: umgmt.v1alpha1.Address.type:type_name -> umgmt.v1alpha1.AddressType
	1,  // 1: umgmt.v1alpha1.Address.origin:type_name -> umgmt.v1alpha1.AddressOrigin
	2,  // 2: umgmt.v1alpha1.Interface.type:type_name -> umgmt.v1alpha1.InterfaceType
	6,  // 3: umgmt.v1alpha1.Interface.addresses:type_name -> umgmt.v1alpha1.Address
	7,  // 4: umgmt.v1alpha1.Interface.vlan:type_name -> umgmt.v1alpha1.Vlan
	3,  // 5: umgmt.v1alpha1.Interface.duplexing:type_name -> umgmt.v1alpha1.Duplexing
	6,  // 6: umgmt.v1alpha1.DnsServer.address:type_name -> umgmt.v1alpha1.Address
	4,  // 7: umgmt.v1alpha1.DnsServer.type:type_name -> umgmt.v1alpha1.DnsType
	6,  // 8: umgmt.v1alpha1.TimeServer.address:type_name -> umgmt.v1alpha1.Address
	5,  // 9: umgmt.v1alpha1.TimeServer.type:type_name -> umgmt.v1alpha1.TimeType
	8,  // 10: umgmt.v1alpha1.Network.interfaces:type_name -> umgmt.v1alpha1.Interface
	9,  // 11: umgmt.v1alpha1.Network.dns_servers:type_name -> umgmt.v1alpha1.DnsServer
	10, // 12: umgmt.v1alpha1.Network.time_servers:type_name -> umgmt.v1alpha1.TimeServer
	14, // 13: umgmt.v1alpha1.GetNetworkInfoRequest.field_mask:type_name -> google.protobuf.FieldMask
	11, // 14: umgmt.v1alpha1.GetNetworkInfoResponse.network:type_name -> umgmt.v1alpha1.Network
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_umgmt_v1alpha1_network_proto_init() }
func file_umgmt_v1alpha1_network_proto_init() {
	if File_umgmt_v1alpha1_network_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_umgmt_v1alpha1_network_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_umgmt_v1alpha1_network_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_umgmt_v1alpha1_network_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interface); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_umgmt_v1alpha1_network_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DnsServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_umgmt_v1alpha1_network_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_umgmt_v1alpha1_network_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Network); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_umgmt_v1alpha1_network_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNetworkInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_umgmt_v1alpha1_network_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNetworkInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_umgmt_v1alpha1_network_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_umgmt_v1alpha1_network_proto_goTypes,
		DependencyIndexes: file_umgmt_v1alpha1_network_proto_depIdxs,
		EnumInfos:         file_umgmt_v1alpha1_network_proto_enumTypes,
		MessageInfos:      file_umgmt_v1alpha1_network_proto_msgTypes,
	}.Build()
	File_umgmt_v1alpha1_network_proto = out.File
	file_umgmt_v1alpha1_network_proto_rawDesc = nil
	file_umgmt_v1alpha1_network_proto_goTypes = nil
	file_umgmt_v1alpha1_network_proto_depIdxs = nil
}
